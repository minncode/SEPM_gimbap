<%- include("./partials/header") %>

    <link rel="stylesheet" href="/stylesheets/main.css">
    <link rel="stylesheet" href="/stylesheets/header.css">
    <script src="../js/script.js"></script>

    <title>RMITdays</title>

  </head>
  <body>

  <!-- Header -->
  <%- include("./partials/navigation") %>

    <!-- main contents -->
    <section class="main-content">
      <div class="student-card">
        <div class="student-card-container">
          <div class="mobileId-profile">
            <img src="/images/studentProfile.png" alt="">
          </div>
          <div class="info">
            <div class="majorAndGrade">
              <p id="major"><%= displaymajor %></p>
            </div>
              <p class="student-name"><%= displayname %> <br> (<%= displayemail.split('@')[0] %>)</p>
          </div>
        </div>
        <div class="buttons">
          <button class="wallet-btn"><a href="paymentMain"><ion-icon class="btn-icon" name="wallet-outline"></ion-icon><p>E-wallet</p></a></button>
          <button type="button" id="open-sheet" aria-controls="sheet" class="qr-btn"><a href="#"><ion-icon class="btn-icon" name="qr-code-outline"></ion-icon><p>QR</p></a></button>
        </div>
      </div>

      <!-- Menu list -->
      <div class="menu-list">
        <ul>
          <a href="timetable"><li><ion-icon class="menu-icon" name="alarm-outline"></ion-icon> <p>Timetable</p></li></a>
          <a href="course_evaluation"><li><ion-icon  class="menu-icon" name="podium-outline"></ion-icon><p>Course Evaluation</p></li></a>
          <a href="campusMap"><li><ion-icon  class="menu-icon" name="map-outline"></ion-icon><p>Campus Map</p></li></a>
        </ul>
      </div>
    </section>
    <!-- 여기에 새로 bottom sheet 추가 예정 -->
    <!-- The sheet component -->
    <div id="sheet" class="column items-center justify-end" aria-hidden="true">
      <!-- Dark background for the sheet -->
      <div class="overlay"></div>

      <!-- The sheet itself -->
      <div class="contents column">
        <!-- Sheet controls -->
        <header class="controls">
          <!-- The thing to drag if you want to resize the sheet -->
          <div class="draggable-area">
            <div class="draggable-thumb"></div>
          </div>
          <!-- Button to close the sheet -->
          <button class="close-sheet" type="button" title="Close the sheet">
            <ion-icon name="close-outline"></ion-icon>
          </button>

          <div class="qr-studentId-info">
            <p class="qr-student-name">Student Name<br>(S1234567)</p>
            <p id="qr-major">Major</p>
          </div>
        </header>
        <div class="qr-mobileId-profile">
          <img src="/images/studentProfile.png" alt="">
        </div>
        <!-- Body of the sheet -->
        <main class="body fill column">
          <div class="main-wrap">
            <div id="qr-mobileId-panel">
              <p>Mobile ID Card</p>
            </div>
            <div class="QR-img">
              <img src="/images/QR.png" alt="">
            </div>
          </div>
        </main>
      </div>
    </div>

    <script>
      const $ = document.querySelector.bind(document)
      
      const openSheetButton = $("#open-sheet")
      const sheet = $("#sheet")
      const sheetContents = sheet.querySelector(".contents")
      const draggableArea = sheet.querySelector(".draggable-area")
      
      let sheetHeight // in vh
      
      const setSheetHeight = (value) => {
        sheetHeight = Math.max(0, Math.min(100, value))
        sheetContents.style.height = `${sheetHeight}vh`
      
        if (sheetHeight === 100) {
          sheetContents.classList.add("fullscreen")
        } else {
          sheetContents.classList.remove("fullscreen")
        }
      }
      
      const setIsSheetShown = (value) => {
        sheet.setAttribute("aria-hidden", String(!value))
      }
      
      // Open the sheet when clicking the 'open sheet' button
      openSheetButton.addEventListener("click", () => {
        setSheetHeight(Math.min(75, 720 / window.innerHeight * 100))
        setIsSheetShown(true)
      })
      
      // Hide the sheet when clicking the 'close' button
      sheet.querySelector(".close-sheet").addEventListener("click", () => {
        setIsSheetShown(false)
      })
      
      // Hide the sheet when clicking the background
      sheet.querySelector(".overlay").addEventListener("click", () => {
        setIsSheetShown(false)
      })
      
      const touchPosition = (event) =>
        event.touches ? event.touches[0] : event
      
      let dragPosition
      
      const onDragStart = (event) => {
        dragPosition = touchPosition(event).pageY
        sheetContents.classList.add("not-selectable")
        draggableArea.style.cursor = document.body.style.cursor = "grabbing"
      }
      
      const onDragMove = (event) => {
        if (dragPosition === undefined) return
      
        const y = touchPosition(event).pageY
        const deltaY = dragPosition - y
        const deltaHeight = deltaY / window.innerHeight * 100
      
        setSheetHeight(sheetHeight + deltaHeight)
        dragPosition = y
      }
      
      const onDragEnd = () => {
        dragPosition = undefined
        sheetContents.classList.remove("not-selectable")
        draggableArea.style.cursor = document.body.style.cursor = ""
      
        if (sheetHeight < 50) {
          setIsSheetShown(false)
        } else if (sheetHeight > 75) {
          setSheetHeight(90)
        }
        }
      
      draggableArea.addEventListener("mousedown", onDragStart)
      draggableArea.addEventListener("touchstart", onDragStart)
      
      window.addEventListener("mousemove", onDragMove)
      window.addEventListener("touchmove", onDragMove)
      
      window.addEventListener("mouseup", onDragEnd)
      window.addEventListener("touchend", onDragEnd)
      
      </script>

  </body>
</html>