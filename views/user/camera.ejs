<%- include("../partials/header") %>
  <title>jsQR Demo</title>
  <script src="javascripts/jsQR.js"></script>
  <link href="https://fonts.googleapis.com/css?family=Ropa+Sans" rel="stylesheet">
  <link rel="stylesheet" href="/stylesheets/camera.css">
  <link rel="stylesheet" href="/stylesheets/header.css">
</head>
<body>
  <%- include("../partials/navigation") %>
    <h1>jsQR Demo</h1>
    <a id="githubLink" href="javascripts/jsQR">View documentation on Github</a>
    <p>Pure JavaScript QR code decoding library.</p>
    <div id="loadingMessage">🎥 Unable to access video stream (please make sure you have a webcam enabled)</div>
    <canvas id="canvas" hidden></canvas>
    <div id="output" hidden>
      <div id="outputMessage">No QR code detected.</div>
      <div hidden><b>Data:</b> <a id="outputLink" href="" target="_blank"></a></div>
    </div>
    <script>
      var video = document.createElement("video");
      var canvasElement = document.getElementById("canvas");
      var canvas = canvasElement.getContext("2d");
      var loadingMessage = document.getElementById("loadingMessage");
      var outputContainer = document.getElementById("output");
      var outputMessage = document.getElementById("outputMessage");
      var outputLink = document.getElementById("outputLink");
  
      function drawLine(begin, end, color) {
        canvas.beginPath();
        canvas.moveTo(begin.x, begin.y);
        canvas.lineTo(end.x, end.y);
        canvas.lineWidth = 4;
        canvas.strokeStyle = color;
        canvas.stroke();
      }
  
      // Use facingMode: environment to attemt to get the front camera on phones
      navigator.mediaDevices.getUserMedia({   video: {
    facingMode: "environment",
    width: { ideal: 1280 },
    height: { ideal: 720 }
  } }).then(function(stream) {
        video.srcObject = stream;
        video.setAttribute("playsinline", true); // required to tell iOS safari we don't want fullscreen
        video.play();
        requestAnimationFrame(tick);
      });
  
      function isURL(str) {
        // 간단한 URL 형식인지 정규식으로 확인
        var pattern = /^(https?:\/\/)?[\w.-]+\.\w{2,}(\/.*)?$/;
        return pattern.test(str);
      }
  
      function tick() {
        loadingMessage.innerText = "⌛ Loading video..."
        if (video.readyState === video.HAVE_ENOUGH_DATA) {
          loadingMessage.hidden = true;
          canvasElement.hidden = false;
          outputContainer.hidden = false;
  
          canvasElement.height = video.videoHeight;
          canvasElement.width = video.videoWidth;
          canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);
          var imageData = canvas.getImageData(0, 0, canvasElement.width, canvasElement.height);
          var code = jsQR(imageData.data, imageData.width, imageData.height, {
            inversionAttempts: "dontInvert",
          });
          if (code) {
            drawLine(code.location.topLeftCorner, code.location.topRightCorner, "#FF3B58");
            drawLine(code.location.topRightCorner, code.location.bottomRightCorner, "#FF3B58");
            drawLine(code.location.bottomRightCorner, code.location.bottomLeftCorner, "#FF3B58");
            drawLine(code.location.bottomLeftCorner, code.location.topLeftCorner, "#FF3B58");
            outputMessage.hidden = true;
            if (isURL(code.data)) { // 데이터가 URL 형식인지 확인
            outputLink.parentElement.hidden = false;
            outputLink.href = code.data; // 데이터를 href로 설정
            outputLink.textContent = code.data; // 링크에 데이터 내용 표시
          } else {
            outputLink.parentElement.hidden = true; // URL 형식이 아니면 링크 숨김
          }
          
          } else {
            outputMessage.hidden = false;
            outputLink.parentElement.hidden = true;
          }
        }
        requestAnimationFrame(tick);
      }
    </script>
  </body>
</html>